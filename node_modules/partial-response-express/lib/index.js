(function () {
   
   'use strict';

    const { compile, filter } = require('json-mask');

    function middlewareWrapper (options) {
      options = options || {};

      function partialResponse (obj, fields) {
        if (!fields || this.statusCode !== 200) return obj;
        return filter(obj, compile(fields));
      }

      function json_hook (original) {            
        return function wrapper (obj) {
          let param = this.req.query[options.query || 'fields'];
          
          if (1 === arguments.length)
            original(partialResponse.call(this, obj, param));
          else if (2 === arguments.length)             
            if ('number' === typeof arguments[1]) 
              original(arguments[1], partialResponse.call(this, obj, param));
            else 
              original(obj, partialResponse.call(this, arguments[1], param));                           
        } 
      
      }

      return function partialResponseMiddleware(req, res, next) {
        if (!res.__isJSONMaskWrapped) {
          res.json = json_hook(res.json.bind(res));
          if (req.jsonp) res.jsonp = json_hook(res.jsonp.bind(res));
          res.__isJSONMaskWrapped = true;
        }
        next();
      }
    }

    module.exports = middlewareWrapper;

})();